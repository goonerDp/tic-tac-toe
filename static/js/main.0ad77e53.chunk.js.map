{"version":3,"sources":["actions/index.js","reducers/stats.js","reducers/index.js","components/Square.js","components/Board.js","components/Stats.js","components/SetStatus.js","components/SetNav.js","utils/index.js","components/Game.js","index.js","Root.js","components/App.js"],"names":["actionTypes","INITIAL_STATE","sets","x_wins","o_wins","draws","combineReducers","stats","state","arguments","length","undefined","action","type","payload","winner","Object","objectSpread","Square","_ref","value","onClick","id","react_default","a","createElement","className","Board","i","_this$props","this","props","winnerLine","squares","components_Square","indexOf","renderSquare","Component","Stats","_ref$stats","SetStatus","status","stepNumber","xIsNext","startNewGame","SetNav","history","goBack","goForward","calcWinner","returnLine","lines","_lines$i","slicedToArray","b","c","line","INITIAL_GAME_STATE","Array","fill","Game","step","_this","setState","slice","concat","_this2","_this$state","current","react","components_SetNav","components_SetStatus","components_Board","handleClick","components_Stats","connect","ReactDOM","render","children","_ref$initState","initState","store","createStore","reducers","composeWithDevTools","es","components_Game","document","getElementById"],"mappings":"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","file":"static/js/main.0ad77e53.chunk.js","sourcesContent":["export const actionTypes = { NEW_GAME: \"NEW_GAME\" };\n\nexport const startNewGame = winner => {\n  return {\n    type: actionTypes.NEW_GAME,\n    payload: winner\n  };\n};\n","import { actionTypes } from \"../actions\";\n\nexport const INITIAL_STATE = {\n  sets: 0,\n  x_wins: 0,\n  o_wins: 0,\n  draws: 0\n};\n\nexport default function(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case actionTypes.NEW_GAME:\n      if (action.payload && action.payload.winner === \"x\") {\n        return { ...state, sets: ++state.sets, x_wins: ++state.x_wins };\n      } else if (action.payload && action.payload.winner === \"o\") {\n        return { ...state, sets: ++state.sets, o_wins: ++state.o_wins };\n      }\n      return { ...state, sets: ++state.sets, draws: ++state.draws };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport stats from \"./stats\";\n\nexport default combineReducers({ stats });\n","import React from \"react\";\nimport { string, bool, func } from \"prop-types\";\n\nconst Square = ({ value, onClick, id, winner }) => {\n  return (\n    <button\n      className={winner ? \"square square--winner\" : \"square\"}\n      onClick={onClick}\n      id={id}\n    >\n      {value}\n    </button>\n  );\n};\n\nSquare.propTypes = {\n  value: string,\n  id: string,\n  winner: bool,\n  onClick: func\n};\n\nexport default Square;\n","import React, { Component } from \"react\";\nimport { func, array, arrayOf, string } from \"prop-types\";\nimport Square from \"./Square\";\n\nclass Board extends Component {\n  static propTypes = {\n    winnerLine: array,\n    squares: arrayOf(string).isRequired,\n    onClick: func.isRequired\n  };\n\n  renderSquare(i) {\n    const { winnerLine, squares, onClick } = this.props;\n    return (\n      <Square\n        value={squares[i]}\n        onClick={() => onClick(i)}\n        winner={winnerLine && winnerLine.indexOf(i) !== -1}\n      />\n    );\n  }\n  render() {\n    return (\n      <div className=\"board\">\n        <div className=\"board__row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board__row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board__row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React from \"react\";\nimport { number, shape } from \"prop-types\";\n\nconst Stats = ({ stats: { sets, x_wins, o_wins, draws } }) => {\n  return (\n    <div className=\"stats\">\n      <div className=\"stats__total\">\n        Sets played: <span className=\"stats__num\">{sets}</span>\n      </div>\n      <div>\n        Player 1 wins:\n        <span className=\"stats__num stats__num--x\">{x_wins}</span>\n      </div>\n      <div>\n        Player 2 wins:\n        <span className=\"stats__num stats__num--0\">{o_wins}</span>\n      </div>\n      <div>\n        Draws: <span className=\"stats__num stats__num--draw\">{draws}</span>\n      </div>\n    </div>\n  );\n};\n\nStats.propTypes = {\n  stats: shape({\n    sets: number,\n    x_wins: number,\n    o_wins: number\n  })\n};\n\nexport default Stats;\n","import React from \"react\";\nimport { func, number, bool, string, object, oneOfType } from \"prop-types\";\n\nconst SetStatus = ({ winner, stepNumber, xIsNext, startNewGame }) => {\n  let status;\n\n  if (winner) {\n    status = \"Winner: \" + winner.winner;\n  } else if (stepNumber === 9) {\n    status = \"It's a draw!\";\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"x\" : \"o\");\n  }\n\n  return (\n    <div className=\"set-status\">\n      {status}\n      {(winner || stepNumber === 9) && (\n        <button onClick={startNewGame(winner)} className=\"btn--new-game\">\n          New game\n        </button>\n      )}\n    </div>\n  );\n};\n\nSetStatus.propTypes = {\n  winner: oneOfType([string, object]),\n  stepNumber: number,\n  xIsNext: bool,\n  startNewGame: func\n};\n\nexport default SetStatus;\n","import React from \"react\";\nimport { func, number, array } from \"prop-types\";\n\nconst SetNav = ({ stepNumber, history, goBack, goForward }) => {\n  return (\n    <div className=\"history-nav\">\n      <button\n        className={\n          stepNumber > 0 ? \"history-nav__btn active\" : \"history-nav__btn\"\n        }\n        onClick={goBack}\n      >\n        &larr; Step Back\n      </button>\n      <button\n        className={\n          stepNumber < history.length - 1\n            ? \"history-nav__btn active\"\n            : \"history-nav__btn\"\n        }\n        onClick={goForward}\n      >\n        Step Forward &rarr;\n      </button>\n    </div>\n  );\n};\n\nSetNav.propTypes = {\n  stepNumber: number.isRequired,\n  history: array.isRequired,\n  goBack: func.isRequired,\n  goForward: func.isRequired\n};\n\nexport default SetNav;\n","export function calcWinner(squares, returnLine) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      if (returnLine) {\n        return { line: lines[i], winner: squares[a] };\n      }\n      return squares[a];\n    }\n  }\n  return null;\n}\n","import React, { Component, Fragment } from \"react\";\nimport Board from \"./Board\";\nimport Stats from \"./Stats\";\nimport SetStatus from \"./SetStatus\";\nimport SetNav from \"./SetNav\";\nimport { connect } from \"react-redux\";\nimport { calcWinner } from \"../utils\";\nimport { startNewGame } from \"../actions\";\n\nexport const INITIAL_GAME_STATE = {\n  history: [\n    {\n      squares: Array(9).fill(null)\n    }\n  ],\n  xIsNext: true,\n  stepNumber: 0\n};\n\nclass Game extends Component {\n  state = INITIAL_GAME_STATE;\n  goBack = () => {\n    const step = this.state.stepNumber;\n    if (step > 0) {\n      this.setState({\n        stepNumber: step - 1,\n        xIsNext: !this.state.xIsNext\n      });\n    }\n  };\n\n  goForward = () => {\n    const step = this.state.stepNumber;\n    const history = this.state.history;\n    if (step < history.length - 1) {\n      this.setState({\n        stepNumber: step + 1,\n        xIsNext: !this.state.xIsNext\n      });\n    }\n  };\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calcWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"x\" : \"o\";\n\n    this.setState({\n      history: history.concat([{ squares: squares }]),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length\n    });\n  }\n\n  startNewGame = winner => () => {\n    this.props.startNewGame(winner);\n    this.setState(INITIAL_GAME_STATE);\n  };\n\n  render() {\n    const { stats } = this.props;\n    const { history, stepNumber, xIsNext } = this.state;\n    const current = history[stepNumber];\n    const winner = calcWinner(current.squares, true);\n    let winnerLine;\n    if (winner) {\n      winnerLine = winner.line;\n    }\n    return (\n      <Fragment>\n        <SetNav\n          stepNumber={stepNumber}\n          history={history}\n          goBack={this.goBack}\n          goForward={this.goForward}\n        />\n        <SetStatus\n          winner={winner}\n          xIsNext={xIsNext}\n          stepNumber={stepNumber}\n          startNewGame={this.startNewGame}\n        />\n        <Board\n          squares={current.squares}\n          onClick={i => this.handleClick(i)}\n          winnerLine={winnerLine}\n        />\n\n        <Stats stats={stats} />\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => {\n    return {\n      stats: state.stats\n    };\n  },\n  { startNewGame }\n)(Game);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./Root\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <Root>\n    <App />\n  </Root>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducers from \"./reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nexport default ({ children, initState = {} }) => {\n  const store = createStore(reducers, initState, composeWithDevTools());\n  return <Provider store={store}>{children}</Provider>;\n};\n","import React from \"react\";\nimport Game from \"./Game\";\nimport \"./style.css\";\n\nexport default () => {\n  return (\n    <div className=\"container\">\n      <Game />\n    </div>\n  );\n};\n"],"sourceRoot":""}